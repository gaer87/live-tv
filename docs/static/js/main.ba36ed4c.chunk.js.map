{"version":3,"sources":["../external \"React\"","../external \"ReactDOM\"","components/header/index.js","components/header/Header.js","components/footer/index.js","components/footer/Footer.js","../../micro-frontends/src/index.js","../../micro-frontends/src/core.js","components/MicroFrontend.js","components/Oauth.js","components/app/App.js","components/app/index.js","serviceWorker.js","index.js"],"names":["module","exports","React","ReactDOM","Header","external_React_default","a","createElement","Navbar","bg","variant","expand","Container","className","Brand","href","Nav","Footer","src","name","host","loaded","bootstrap","Promise","res","rej","fetch","concat","then","json","Error","fetchManifest","manifest","script","document","id","files","onload","onerror","head","appendChild","loadScript","nameFunc","window","catch","error","console","log","render","cont","getElementById","_render","unmount","_unmount","MicroFrontend","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mf","Component","Oauth","_ref","children","doc","clientId","url","redirectURI","scope","responseType","_useState","useState","_useState2","slicedToArray","isLogged","setIsLogged","useEffect","location","hash","token","URLSearchParams","substr","get","sessionStorage","setItem","split","replace","getItem","tokenUrl","defaultProps","origin","process","REACT_APP_GAMES_HOST","REACT_APP_TWITCH_CLIENT_ID","App","Fragment","header","components_Oauth","components_MicroFrontend","footer","Boolean","hostname","match","app","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba36ed4c.chunk.js","sourcesContent":["module.exports = React;","module.exports = ReactDOM;","import Header from './Header'\nexport default Header\n","import React from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nconst Header = () => (\n  <Navbar bg='dark' variant='dark' expand=\"lg\">\n    <Container className='App'>\n      <Navbar.Brand href='/'>{'\\u{1F37F}'} Live TV</Navbar.Brand>\n      <Nav className='mr-auto'>\n        {/*<Nav.Link href='/games'>Games</Nav.Link>*/}\n      </Nav>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","import Footer from './Footer'\nexport default Footer;\n","import React from 'react'\nimport Container from 'react-bootstrap/Container';\n\nconst Footer = () => (\n  <footer className='text-muted'>\n    <Container>\n      <ul className=\"list-inline\">\n        <li className=\"list-inline-item\">&copy; 2019 LiveTV</li>\n        <li className=\"list-inline-item\"><a href=\"mailto:support@live-tv.org\">contact us</a></li>\n      </ul>\n    </Container>\n  </footer>\n)\n\nexport default Footer\n\n","import core from './core';\nexport default core;","var fetchManifest = function fetchManifest(name, host) {\n  // console.info('fetchManifest')\n  return fetch(\"\".concat(host, \"/asset-manifest.json\")).then(function (res) {\n    return res.json();\n  }, function () {\n    throw new Error('Not loaded asset-manifest.json');\n  });\n};\n\nvar loadScript = function loadScript(host, manifest) {\n  return new Promise(function (res, rej) {\n    // console.info('loadScript')\n    var script = document.createElement('script');\n    script.id = manifest.name;\n    script.src = \"\".concat(host).concat(manifest.files['main.js']);\n\n    script.onload = function () {\n      return res();\n    };\n\n    script.onerror = function () {\n      return rej();\n    };\n\n    document.head.appendChild(script);\n  });\n};\n\nvar _render = function render(name) {\n  // console.info('render')\n  var nameFunc = \"\".concat(name, \"Render\");\n  var cont = document.getElementById(name);\n\n  if (!cont) {\n    throw new Error(\"The \\\"\".concat(name, \"\\\" micro frontend do not have a container.\"));\n  }\n\n  window[nameFunc](cont);\n};\n\nvar _unmount = function unmount(name) {\n  // console.info('unmount')\n  var nameFunc = \"\".concat(name, \"Unmount\");\n  typeof window[nameFunc] === 'function' ? window[nameFunc]() : new Error(\"The \\\"\".concat(name, \"\\\" micro frontend was not unmounted.\"));\n};\n\nexport default (function (name, host) {\n  var loaded;\n  return {\n    bootstrap: function bootstrap() {\n      loaded = new Promise(function (res, rej) {\n        fetchManifest(name, host).then(function (manifest) {\n          return loadScript(host, manifest).then(function () {\n            var nameFunc = \"\".concat(name, \"Render\");\n\n            if (typeof window[nameFunc] !== 'function') {\n              throw new Error(\"The \\\"\".concat(name, \"\\\" micro frontend was not bootstrapped.\"));\n            }\n\n            res();\n          });\n        }).catch(function (error) {\n          console.log(error);\n          rej();\n        });\n      });\n      return loaded;\n    },\n    render: function render() {\n      // console.info('go render');\n      if (!loaded) {\n        new Error(\"The \\\"\".concat(name, \"\\\" micro frontend was not mounted before bootstrapping.\"));\n      }\n\n      loaded.then(function () {\n        return _render(name);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    unmount: function unmount() {\n      if (!loaded) {\n        new Error(\"The \\\"\".concat(name, \"\\\" micro frontend was not unmounted before bootstrapping.\"));\n      }\n\n      loaded.then(function () {\n        return _unmount(name);\n      }); // loaded = null\n    }\n  };\n});","import React, { Component } from 'react'\nimport mf from '@gaer87/micro-frontends'\n\nclass MicroFrontend extends Component {\n  constructor(props) {\n    super(props)\n\n    const { name, host } = props\n\n    this.mf = mf(name, host)\n  }\n\n  componentDidMount() {\n    this.mf.bootstrap()\n      .then(this.mf.render)\n  }\n\n  componentWillUnmount() {\n    this.mf.unmount()\n  }\n\n  render () {\n    const { name } = this.props\n    return <div id={name} />\n  }\n}\n\nexport default MicroFrontend\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Oauth = ({ children, doc, clientId, url, redirectURI, scope, responseType }) => {\n  const [ isLogged, setIsLogged ] = useState(false)\n\n  useEffect(() => {\n    const { location } = doc\n    const { hash } = location\n\n    const params = new URLSearchParams(`?${hash.substr(1)}`)\n    const token = params.get('access_token')\n\n    if (token) {\n      sessionStorage.setItem('token', token)\n\n      const url = location.href.split(hash)[0]\n      return location.replace(url)\n    }\n\n    if (sessionStorage.getItem('token')) {\n      return setIsLogged(true)\n    }\n  }, [ doc ])\n\n  const tokenUrl = `${url}?client_id=${clientId}&redirect_uri=${redirectURI}&response_type=${responseType}&scope=${scope}`\n\n  return isLogged ? children : <a href={tokenUrl}>Log in</a>\n}\n\nOauth.propTypes = {\n  url: PropTypes.string.isRequired,\n  redirectURI: PropTypes.string.isRequired,\n  scope: PropTypes.string,\n  responseType: PropTypes.string,\n  doc: PropTypes.object.isRequired\n}\n\nOauth.defaultProps = {\n  url: 'https://id.twitch.tv/oauth2/authorize',\n  redirectURI: `${window.location.origin}/`,\n  scope: '',\n  responseType: 'token',\n  doc: window.document\n}\n\nexport default Oauth\n","import React, { useEffect } from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Header from '../header'\nimport Footer from '../footer'\nimport MicroFrontend from '../MicroFrontend'\nimport Oauth from '../Oauth'\n\nconst {\n  REACT_APP_GAMES_HOST,\n  REACT_APP_TWITCH_CLIENT_ID\n} = process.env\n\nconst App = () => {\n  useEffect(() => {\n    sessionStorage.getItem('TWITCH_CLIENT_ID') || sessionStorage.setItem('TWITCH_CLIENT_ID', REACT_APP_TWITCH_CLIENT_ID)\n  })\n\n  return (\n    <>\n      <Header />\n\n      <main className='mt-4 mb-4'>\n        <Container>\n          <Oauth clientId={REACT_APP_TWITCH_CLIENT_ID}>\n            <MicroFrontend name='games' host={REACT_APP_GAMES_HOST} />\n          </Oauth>\n        </Container>\n      </main>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default App\n","import App from './App'\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}